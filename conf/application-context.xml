<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
               http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
               http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
               http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
               http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <context:property-placeholder location="classpath*:database.properties"/>
    <context:spring-configured/>
    <context:annotation-config/>
    <bean id="appInit" class="configs.AppConfig"/>

    <bean id="sessionFactory" class="multitenancy.LocalSessionFactoryBean" scope="request">
        <property name="dataSourceMap" ref="datasources"/>
        <property name="dataSource" ref="dataSource1"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/>
                <entry key="hibernate.show_sql" value="true"/>
                <entry key="hibernate.multiTenancy" value="DATABASE"/>
                <entry key="hibernate.tenant_identifier_resolver" value-ref="webSessionTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="simpleTenantConnectionProvider"/>
            </map>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>models.Bar</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="request">
                    <bean class="org.springframework.context.support.SimpleThreadScope"/>
                </entry>
                <entry key="session">
                    <bean class="org.springframework.context.support.SimpleThreadScope"/>
                </entry>
            </map>
        </property>
    </bean>

    <tx:annotation-driven mode="aspectj" transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="autodetectDataSource" value="false"/>
    </bean>




    <util:map id="datasources">
        <entry key="tenant1" value-ref="dataSource1"/>
        <entry key="tenant2" value-ref="dataSource2"/>
    </util:map>

    <bean id="webSessionTenantIdentifierResolver"
          class="multitenancy.WebSessionCurrentTenantIdentifierResolver" scope="request">
        <aop:scoped-proxy/>
    </bean>

    <bean id="simpleTenantConnectionProvider" class="multitenancy.SimpleMultiTenantConnectionProvider">
        <property name="dataSourceMap" ref="datasources"/>
    </bean>

    <bean id="dataSource1" parent="abstractDataSource">
        <property name="url" value="jdbc:postgresql://localhost/mt1"/>
        <property name="username" value="jirauser"/>
        <property name="password" value="jirauser"/>
    </bean>

    <bean id="dataSource2" parent="abstractDataSource">
        <property name="url" value="jdbc:postgresql://localhost/mt2"/>
        <property name="username" value="jirauser"/>
        <property name="password" value="jirauser"/>
    </bean>

    <bean class="org.apache.commons.dbcp.BasicDataSource" abstract="true" destroy-method="close"
          id="abstractDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="1800000"/>
        <property name="numTestsPerEvictionRun" value="3"/>
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <property name="validationQuery" value="SELECT 1"/>
    </bean>

    <tx:advice id="txServiceDao" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="exists" propagation="SUPPORTS" rollback-for="java.lang.Exception"/>
            <tx:method name="find*" propagation="SUPPORTS" rollback-for="java.lang.Exception"/>
            <tx:method name="get*" propagation="SUPPORTS" rollback-for="java.lang.Exception"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="*Commit" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="serviceInvocation"
                      expression="execution(public * services.MultitenantService.*(..))"/>
        <aop:advisor pointcut-ref="serviceInvocation" advice-ref="txServiceDao"/>
    </aop:config>


</beans>
